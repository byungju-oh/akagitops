name: Deploy Sinkhole App to Azure Container Apps

on:
  push:
    branches: [main]
  workflow_dispatch:  # 수동 실행 가능

env:
  REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}  
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  CONTAINER_APP_NAME: ${{ secrets.CONTAINER_APP_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: �� Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY_LOGIN_SERVER }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: 🔨 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY_LOGIN_SERVER }}/sinkhole-app:${{ github.sha }}
          ${{ env.REGISTRY_LOGIN_SERVER }}/sinkhole-app:latest
        build-args: |
          REACT_APP_API_URL=${{ vars.REACT_APP_API_URL }}
          REACT_APP_MAP_CENTER_LAT=${{ vars.REACT_APP_MAP_CENTER_LAT }}
          REACT_APP_MAP_CENTER_LNG=${{ vars.REACT_APP_MAP_CENTER_LNG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🔐 Install Azure CLI and Login
      run: |
        # Azure CLI 이미 설치되어 있는지 확인
        az version
        
        # Service Principal로 로그인
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}
        
        # 구독 설정
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
        # 로그인 확인
        az account show

    - name: 🚀 Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.REGISTRY_LOGIN_SERVER }}/sinkhole-app:${{ github.sha }}

    - name: 🔧 Update environment variables
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --set-env-vars \
            SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            KAKAO_API_KEY="${{ secrets.KAKAO_API_KEY }}" \
            AZURE_OPENAI_API_KEY="${{ secrets.AZURE_OPENAI_API_KEY }}" \
            SEARCH_INDEX_NAME="${{ secrets.SEARCH_INDEX_NAME }}" \
            SEARCH_KEY="${{ secrets.SEARCH_KEY }}" \
            SEARCH_ENDPOINT="${{ secrets.SEARCH_ENDPOINT }}" \
            ENDPOINT_URL="${{ secrets.ENDPOINT_URL }}" \
            DEPLOYMENT_NAME="${{ secrets.DEPLOYMENT_NAME }}" \
            AZURE_SPEECH_KEY="${{ secrets.AZURE_SPEECH_KEY }}" \
            AZURE_SPEECH_REGION="${{ secrets.AZURE_SPEECH_REGION }}" \
            PORT=8000

    - name: 🔧 Update target port
      run: |
        az containerapp ingress update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --target-port 8000

    - name: ✅ Verify deployment
      run: |
        echo "🚀 싱크홀 앱이 성공적으로 배포되었습니다!"
        echo "URL: https://${{ env.CONTAINER_APP_NAME }}.graywave-2912aaea.koreacentral.azurecontainerapps.io"
        
        # 배포 상태 확인
        az containerapp show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query "properties.runningStatus" -o tsv

    - name: 📊 Show recent logs
      run: |
        echo "📋 최근 로그:"
        az containerapp logs show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --since 5m
